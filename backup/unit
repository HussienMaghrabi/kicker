<template>
	<div>
		
	    <b-table
	        :data="leads"
	        bordered
	        checkable
	        narrowed
	        hoverable

	        paginated
	        backend-pagination

	        :current-page="page"
	        total="0"
	        per-page="10"
	        @page-change="onPageChange"

	        
	        default-sort-direction="desc"
	        default-sort="created_at"
	      >
            <template>



            </template>
		        <template slot-scope="props">
                   
		            <b-table-column field="id" label="ID" sortable>
		                {{props.row.id}}
		            </b-table-column>

		          

		            <b-table-column field="Image" label="Image" sortable>
		                <img :src="'/uploads/'+props.row.image" width="160px">
		            </b-table-column>
		            
		            <b-table-column field="leadProbability" label="Availabity" sortable>
		                {{props.row.availability}}
		            </b-table-column>

		            <b-table-column field="first_name" label="price" sortable>
		                {{props.row.price}}
		            </b-table-column>

		       

		            <b-table-column field="phone" label="Location" sortable>
		                {{props.row.location}}
                    {{ props.row.location }}
		            </b-table-column>

		            <b-table-column field="requestLocation" label="Rooms" sortable>
		                {{props.row.rooms}}
		            </b-table-column>

		            <b-table-column field="projectName" label="Bathrooms" sortable>
		                {{props.row.bathrooms}}
		            </b-table-column>

		            <b-table-column field="created_at" label="Area" sortable>
		                {{props.row.area}} KM ^ 2
		            </b-table-column>

		            <b-table-column field="created_at" label="Delivery Date" sortable>
		                {{props.row.delivery_date}}
		            </b-table-column>

		            <b-table-column field="created_at" label="Created At" sortable>
		                {{props.row.created_at}}
		            </b-table-column>

		         

		            <b-table-column field="phone" label="Options" centered>
		                <div class="select">
		                    <select @change="leadActions($event,props.row.id)">
		                        <option disabled selected value="options">Options</option>
		                        <option value="show">Show</option>
		                        <option value="edit">Edit</option>
		                        <option value="delete">Delete</option>
		                    </select>
		                </div>
		            </b-table-column>

		            
		    
		    </template>

		    <template slot="empty" > 
		        <section class="section">
		            <div class="content has-text-grey has-text-centered">
		                <p>
		                    <b-icon
		                        icon="emoticon-sad"
		                        size="is-large">
		                    </b-icon>
		                </p>
		                <p>Nothing here.</p>
                    
		            </div>
		        </section>
		        <hr>
            
		    </template>
		</b-table>
	</div>
</template>


<script>

	import {getPublicData,newResaleFilter,getMyLeads, getResales} from './../../calls'
    export default {
    	data(){
    		return {
          unit_type:[],
                locations: [],
                test:{},
          page: parseInt(this.$route.params.page),
           newCallData: {date: new Date()},
                leadsCurrentNumber: 0,
                leadsTotalNumber: 0,
                getLeadsByAgent: [],
                leadSources: [],
                leads:[],
                isEmpty: false,
                isLoading: true,
                hasMobileCards: true,
                isPaginated: true,
                isPaginationSimple: false,
                defaultSortDirection: 'desc',
                total: 0,
                page: 1,
                perPage: 10,
                isLoading: true,
                isFullPage: true,
                searchInput: '',
                selectedLeads: [],
                ShowHint: false,
                hintId: '',
                callStatus: [],
                projects: [],
                meetingStatus:[],
                filter: {},
                startFilter: false,          
                switchLeadModel: false,
                bulkActionModel: false,
                switchLeadData: {},
                leadsIds: [],
                commercialAgents: [],
                residentialAgents: [],
                permArray: [],
                reloadData: false,

    		}
    	},
      created() {

              this.getPublic()
        },
    	mounted() {
            this.getData()
          
        },
        
    	methods:{
    		
    		getData(){
    			var jsonDataFormat = {
					"token": window.auth_user.token,
					"user_id":window.auth_user.id,
				  	"lang":"en",
				  	"type":"personal",
				  	"selection": "me"
				}
    			getResales(jsonDataFormat, this.page)
    			.then(response=>{
    				this.leads = response.data
          
    			})
    			.catch(error => {
                    console.log(error)
                })
    		},
        filterLeads(scrollSwitch = false){
             
                var data ={
                    'location':this.filter.location,
                  
                    '_token':this.token,
                    'agent_id':this.userId,
                };
               
            },
            getPublic(){
              console.log('55');
                getPublicData().then(response=>{
                 
                    
                    
               

                    console.log(this.projects)
                
                    //this.locations = response.data.locations
                    this.unit_type = response.data.unit_type
                    this.test = response.data.projects
                    this.location = response.data.data[0]
                  
                })
                .catch(error => {
                    console.log(error)
                })
            },
    		onPageChange(page) {
    			this.getData()
       
            }
    	}
    }
</script>
